version: 2.1
description: >
  DeployHub Integration. This Orb approves, moves, updates microservices, assigns application versions, and
  deploys objects passing in data between the CircleCI pipeline to DeployHub. The source for this Orb is available 
  at: https://github.com/DeployHubProject/deployhub-orb/orb/deployhub-orb.yml

executors:
    default:
      description: "Docker image for interacting with DeployHub"
      docker:
        - image: circlecipublic/docker-orb-test

commands:  
  microservice_version_update:
    description: "Update the microservice or component with git and build data"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to associate the component to"
        type: string
      appversion:
        description: "Application Version to associate the component to"
        type: string 
      compname:
        description: "Component Name being updated"
        type: string
      compversion:
        description: "Component Version being updated"
        type: string 
      comptype:
        description: "Type of component, --docker or --file"
        type: string   
      helmchart:
        description: "Helm Chart Name"
        type: string   
      dockersha:
        description: "sha of the container"
        type: string  
      dockerrepo:
        description: "docker repo from push"
        type: string    
      builddate:
        description: "Build Date"
        type: string
      gitrepo:
        description: "Git Repo Name"
        type: string
      giturl:
        description: "Git Url"
        type: string
      gitcommit:
        description: "Git Commit"
        type: string
      buildid:
        description: "Build Url"
        type: string
      buildnumber:
        description: "Build Number"
        type: string                                      
    steps:
      - run:
          name: Update Component
          command: >
            docker run quay.io/deployhub/compupdate:latest 
            updatecomp
            --dhuser "$<< parameters.dhuser >>"
            --dhpass "$<< parameters.dhpass >>"
            --dhurl "$<< parameters.dhurl >>"
            --appname "<< parameters.application >>"
            --appversion "<< parameters.appversion >>"
            --compname "<< parameters.compname >>"
            --compversion "<< parameters.compversion >>"
            << parameters.comptype >>
            --compattr "GitCommit:<< parameters.gitcommit >>" 
            --compattr "GitUrl:<< parameters.giturl >>" 
            --compattr "GitRepo:<< parameters.gitrepo >>" 
            --compattr "Chart:<< parameters.helmchart >>"
            --compattr "DockerSha:<< parameters.dockersha >>"
            --compattr "DockerBuildDate:<< parameters.builddate >>"
            --compattr "DockerRepo:<< parameters.dockerrepo >>"
            --compattr "BuildId:<< parameters.buildid >>"
            --compattr "BuildNumber:<< parameters.buildnumber >>"

  approve:
    description: "Approves an Application Version for the current stage of the pipeline"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Approve"
        type: string
      appversion:
        description: "Application Version to Approve"
        type: string        

    steps:
      - run:
          name: Approve Application Version
          command: >
            docker run quay.io/deployhub/compupdate:latest  
            approve
            --dhuser "$<< parameters.dhuser >>"
            --dhpass "$<< parameters.dhpass >>"
            --dhurl "$<< parameters.dhurl >>"
            --appname "<< parameters.application >>"
            --appversion "<< parameters.appversion >>"

  move:
    description: "Moves an Application Version from the 'from' stage of the pipeline to another stage using the Move Task"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Move"
        type: string
      appversion:
        description: "Application Version to Move"
        type: string    
      from_domain:
        description: "Pipeline stage to move from"
        type: string
      move_task:
        description: "'Move Task' used to move the application version to desired stage"
        type: string                

    steps:
    - run:
        name: Move an Application Version through the pipeline
        command: >
          docker run quay.io/deployhub/compupdate:latest 
          move
          --dhuser "$<< parameters.dhuser >>"
          --dhpass "$<< parameters.dhpass >>"
          --dhurl "$<< parameters.dhurl >>"
          --appname "<< parameters.application >>"
          --appversion "<< parameters.appversion >>"
          --from_domain "<< parameters.from_domain >>"
          --task "<< parameters.move_task >>"                

  deploy:
    description: "Deploys an Application Version to an Environment"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Deploy"
        type: string
      appversion:
          description: "Application Version to Deploy"
          type: string    
      environment:
        description: "Environment to Deploy to"
        type: string             

    steps:
    - run:
        name: Deploy Application Version
        command: >
          docker run quay.io/deployhub/compupdate:latest 
          deploy
          --dhuser "$<< parameters.dhuser >>"
          --dhpass "$<< parameters.dhpass >>"
          --dhurl "$<< parameters.dhurl >>"
          --appname "<< parameters.application >>"
          --appversion "<< parameters.appversion >>"          
          --env "<< parameters.environment >>"

  envscript:
    description: "Generate the environment variable script from the TOML file"
    parameters:
      envvars:
        description: "Name of the input environment TOML file"
        type: string
      envvars_sh:
        description: "Name of output shell script name"
        type: string
    steps:
    - run:
        name: Create env script
        command: >
          docker run -v /home/circleci/project:/home/circleci/project quay.io/deployhub/compupdate:latest 
          envscript
          --envvars << parameters.envvars >>
          --envvars_sh << parameters.envvars_sh >>         
          
jobs:
  approve_job:
    description: "Approve an Application Version"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Approve"
        type: string
      appversion:
        description: "Application Version to Approve"
        type: string        
    executor: default
    steps:
      - approve:
          dhuser: << parameters.dhuser >>
          dhpass: << parameters.dhpass >>
          dhurl: << parameters.dhurl >>
          application:  << parameters.application >>
          appversion:  << parameters.appversion >>
  move_job:
    description: "Move an Application Version through the pipeline"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
      application:
        description: "Application Name to move"
        type: string
      appversion:
        description: "Application Version to move"
        type: string   
      from_domain:
        description: "Pipeline stage to move from"
        type: string
      move_task:
        description: "'Move Task' used to move the application version to desired stage"
        type: string 
    executor: default
    steps:
      - move:
          dhuser: << parameters.dhuser >>
          dhpass: << parameters.dhpass >>
          dhurl: << parameters.dhurl >>
          application:  << parameters.application >>
          appversion:  << parameters.appversion >>
          from_domain:  << parameters.from_domain >>
          move_task:  << parameters.move_task >>   
  deploy_job:
    description: "Deploy an Application Version to an Environment"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Deploy"
        type: string
      appversion:
        description: "Application Version to Deploy"
        type: string        
      environment:
        description: "Environment to Deploy to"
        type: string   
    executor: default
    steps:
      - deploy:
          dhuser: << parameters.dhuser >>
          dhpass: << parameters.dhpass >>
          dhurl: << parameters.dhurl >>
          application:  << parameters.application >>
          appversion:  << parameters.appversion >>          
          environment:  << parameters.environment >>                  
  microservice_version_update_job:
    description: "Update the microservice or component with git and build data"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to associate the component to"
        type: string
      appversion:
        description: "Application Version to associate the component to"
        type: string 
      compname:
        description: "Component Name being updated"
        type: string
      compversion:
        description: "Component Version being updated"
        type: string 
      comptype:
        description: "Type of component, --docker or --file"
        type: string   
      helmchart:
        description: "Helm Chart Name"
        type: string   
      dockersha:
        description: "sha of the container"
        type: string  
      dockerrepo:
        description: "docker repo from push"
        type: string    
      builddate:
        description: "Build Date"
        type: string
      gitrepo:
        description: "Git Repo Name"
        type: string
      giturl:
        description: "Git Url"
        type: string
      gitcommit:
        description: "Git Commit"
        type: string
      buildid:
        description: "Build Url"
        type: string
      buildnumber:
        description: "Build Number"
        type: string          
    executor: default         
    steps:
      - microservice_version_update:
          dhuser: << parameters.dhuser >>
          dhpass: << parameters.dhpass >>
          dhurl: << parameters.dhurl >>
          application: << parameters.application >>
          appversion: << parameters.appversion >>
          compname: << parameters.compname >>
          compversion: << parameters.compversion >>
          comptype: << parameters.comptype >>
          helmchart: << parameters.helmchart >>
          dockersha: << parameters.dockersha >>
          builddate: << parameters.builddate >>
          dockerrepo: << parameters.dockerrepo >>
          giturl: << parameters.giturl >>
          gitrepo: << parameters.gitrepo >>
          gitcommit: << parameters.gitcommit >>
          buildid: << parameters.buildid >>
          buildnumber: << parameters.buildnumber >> 
  envscript_job:
    description: "Generate the environment variable script from the TOML file"
    parameters:
      envvars:
        description: "Name of the input environment TOML file"
        type: string
      envvars_sh:
        description: "Name of output shell script name"
        type: string  
    executor: default
    steps:
      - envscript:
          envvars: << parameters.envvars >>
          envvars_sh: << parameters.envvars_sh >>  