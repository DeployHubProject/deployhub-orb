version: 2.1
description: >
  DeployHub Integration. This Orb approves, moves, updates microservices, assigns application versions, and
  deploys objects passing in data between the CircleCI pipeline to DeployHub.

display:
  home_url: https://www.deployhub.com/
  source_url: https://github.com/DeployHubProject/deployhub-orb

executors:
    default:
      description: "Docker image for interacting with DeployHub"
      docker:
        - image: circlecipublic/docker-orb-test

commands:  
  microservice_version_update:
    description: "Update the microservice or component with git and build data"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to associate the component to"
        type: string
        default: ""
      appversion:
        description: "Application Version to associate the component to"
        type: string
        default: "" 
      compname:
        description: "Component Name being updated"
        type: string
      compversion:
        description: "Component Version being updated"
        type: string 
      comptype:
        description: "Type of component, --docker or --file"
        type: string
        default: "--docker"  
      helmchart:
        description: "Helm Chart Name"
        type: env_var_name
        default: COMPONENT_CHARTNAME
      registry:
        description: "Docker Registry Name"
        type: env_var_name
        default: DOCKER_REGISTRY
      image:
        description: "Image Name"
        type: env_var_name
        default: COMPONENT_IMAGENAME
      tag:
        description: "Image Tag"
        type: env_var_name
        default: IMAGE_TAG
      imagesha:
        description: "sha of the container"
        type: string 
        default: $(</tmp/digest.txt)
      customaction:
        description: "Custom Action"
        type: string
        default: "GLOBAL.HelmChart"                                                            
    steps:
      - run:
          name: Update microservice or component
          command: >
            env > /tmp/env_file;
            docker run --env-file=/tmp/env_file quay.io/deployhub/compupdate:latest 
            updatecomp
            --dhuser "$<< parameters.dhuser >>"
            --dhpass "$<< parameters.dhpass >>"
            --dhurl "$<< parameters.dhurl >>"
            --appname "<< parameters.application >>"
            --appversion "<< parameters.appversion >>"
            --appautoinc "Y"
            --compname "<< parameters.compname >>"
            --compversion "<< parameters.compversion >>"
            << parameters.comptype >>
            --compattr "GitCommit:$CIRCLE_SHA1" 
            --compattr "GitUrl:$CIRCLE_REPOSITORY_URL" 
            --compattr "GitRepo:$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME" 
            --compattr "GitBranch:$CIRCLE_BRANCH"
            --compattr "GitTag:$CIRCLE_TAG"
            --compattr "Chart:<< parameters.helmchart >>"
            --compattr "DockerSha:<< parameters.imagesha >>"
            --compattr "DockerBuildDate:$(date)"
            --compattr "DockerRepo:<< parameters.registry >>/<< parameters.image >>"
            --compattr "DockerTag:<< parameters.tag >>"
            --compattr "BuildId:$CIRCLE_BUILD_NUM"
            --compattr "BuildUrl:$CIRCLE_BUILD_URL"
            --compattr "BuildNumber:$CIRCLE_BUILD_NUM"
            --compattr "CustomAction:<< parameters.customaction >>"          

  approve:
    description: "Approves an Application Version for the current stage of the pipeline"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Approve"
        type: string
      appversion:
        description: "Application Version to Approve"
        type: string        

    steps:
      - run:
          name: Approve Application Version
          command: >
            env > /tmp/env_file;
            docker run --env-file=/tmp/env_file quay.io/deployhub/compupdate:latest 
            approve
            --dhuser "$<< parameters.dhuser >>"
            --dhpass "$<< parameters.dhpass >>"
            --dhurl "$<< parameters.dhurl >>"
            --appname "<< parameters.application >>"
            --appversion "<< parameters.appversion >>"

  move:
    description: "Moves an Application Version from the 'from' stage of the pipeline to another stage using the Move Task"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Move"
        type: string
      appversion:
        description: "Application Version to Move"
        type: string    
      from_domain:
        description: "Pipeline stage to move from"
        type: string
      move_task:
        description: "'Move Task' used to move the application version to desired stage"
        type: string                

    steps:
    - run:
        name: Move an Application Version through the pipeline
        command: >
          env > /tmp/env_file;
          docker run --env-file=/tmp/env_file quay.io/deployhub/compupdate:latest  
          move
          --dhuser "$<< parameters.dhuser >>"
          --dhpass "$<< parameters.dhpass >>"
          --dhurl "$<< parameters.dhurl >>"
          --appname "<< parameters.application >>"
          --appversion "<< parameters.appversion >>"
          --from_domain "<< parameters.from_domain >>"
          --task "<< parameters.move_task >>"                

  deploy:
    description: "Deploys an Application Version to an Environment"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Deploy"
        type: string
      appversion:
          description: "Application Version to Deploy"
          type: string    
      environment:
        description: "Environment to Deploy to"
        type: string             

    steps:
    - run:
        name: Deploy Application Version
        command: >
          env > /tmp/env_file;
          docker run --env-file=/tmp/env_file quay.io/deployhub/compupdate:latest  
          deploy
          --dhuser "$<< parameters.dhuser >>"
          --dhpass "$<< parameters.dhpass >>"
          --dhurl "$<< parameters.dhurl >>"
          --appname "<< parameters.application >>"
          --appversion "<< parameters.appversion >>"          
          --deployenv "<< parameters.environment >>"

  deploy_component:
    description: "Deploys an Application Version to an Environment based on a Component"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      compname:
        description: "Component Name being deployed"
        type: string
      compversion:
        description: "Component Version being deployed"
        type: string          
    steps:
    - run:
        name: Deploy Application Version base on a Component
        command: >
          env > /tmp/env_file;
          docker run --env-file=/tmp/env_file quay.io/deployhub/compupdate:latest  
          deploy
          --dhuser "$<< parameters.dhuser >>"
          --dhpass "$<< parameters.dhpass >>"
          --dhurl "$<< parameters.dhurl >>"
          --compname "<< parameters.compname >>"
          --compversion "<< parameters.compversion >>"

  envscript:
    description: "Generate the environment variable script from the TOML file"
    parameters:
      envvars:
        description: "Name of the input environment TOML file"
        type: string
      envvars_sh:
        description: "Name of output shell script name"
        type: string
    steps:
    - run:
        name: Create env script
        command: |
          docker create -v /home/circleci/project --name envscript quay.io/deployhub/compupdate:latest /bin/true;
          docker cp << parameters.envvars >> envscript:/home/circleci/project/envvars.toml;
          docker run --volumes-from envscript quay.io/deployhub/compupdate:latest envscript --envvars /home/circleci/project/envvars.toml --envvars_sh /home/circleci/project/bash_env.sh;
          docker cp envscript:/home/circleci/project/bash_env.sh /tmp/bash_env.sh;
          cat /tmp/bash_env.sh >> << parameters.envvars_sh >>;
          
jobs:
  approve_job:
    description: "Approve an Application Version"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Approve"
        type: string
      appversion:
        description: "Application Version to Approve"
        type: string        
    executor: default
    steps:
      - approve:
          dhuser: << parameters.dhuser >>
          dhpass: << parameters.dhpass >>
          dhurl: << parameters.dhurl >>
          application:  << parameters.application >>
          appversion:  << parameters.appversion >>
  move_job:
    description: "Move an Application Version through the pipeline"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
      application:
        description: "Application Name to move"
        type: string
      appversion:
        description: "Application Version to move"
        type: string   
      from_domain:
        description: "Pipeline stage to move from"
        type: string
      move_task:
        description: "'Move Task' used to move the application version to desired stage"
        type: string 
    executor: default
    steps:
      - move:
          dhuser: << parameters.dhuser >>
          dhpass: << parameters.dhpass >>
          dhurl: << parameters.dhurl >>
          application:  << parameters.application >>
          appversion:  << parameters.appversion >>
          from_domain:  << parameters.from_domain >>
          move_task:  << parameters.move_task >>   
  deploy_job:
    description: "Deploy an Application Version to an Environment"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to Deploy"
        type: string
      appversion:
        description: "Application Version to Deploy"
        type: string        
      environment:
        description: "Environment to Deploy to"
        type: string   
    executor: default
    steps:
      - deploy:
          dhuser: << parameters.dhuser >>
          dhpass: << parameters.dhpass >>
          dhurl: << parameters.dhurl >>
          application:  << parameters.application >>
          appversion:  << parameters.appversion >>          
          environment:  << parameters.environment >>     
  deploy_component_job:
    description: "Deploy an Application Version to an Environment based on a Component"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      compname:
        description: "Component Name being deployed"
        type: string
      compversion:
        description: "Component Version being deployed"
        type: string 
    executor: default
    steps:
      - deploy_component:
          dhuser: << parameters.dhuser >>
          dhpass: << parameters.dhpass >>
          dhurl: << parameters.dhurl >>
          compname:  << parameters.compname >>  
          compversion:  << parameters.compversion >>                        
  microservice_version_update_job:
    description: "Update the microservice or component with git and build data"
    parameters:
      dhuser:
        description: "Name of env var storing UserId to access DeployHub"
        type: env_var_name
        default: DH_USERID
      dhpass:
        description: "Name of env var storing dhpass to access DeployHub"
        type: env_var_name
        default: DH_PASSWORD
      dhurl:
        description: "Name of env var storing URL to the DeployHub Server"
        type: env_var_name
        default: DH_SERVERURL
      application:
        description: "Application Name to associate the component to"
        type: string
        default: ""
      appversion:
        description: "Application Version to associate the component to"
        type: string
        default: "" 
      compname:
        description: "Component Name being updated"
        type: string
      compversion:
        description: "Component Version being updated"
        type: string 
      comptype:
        description: "Type of component, --docker or --file"
        type: string
        default: "--docker"  
      helmchart:
        description: "Helm Chart Name"
        type: env_var_name
        default: COMPONENT_CHARTNAME
      registry:
        description: "Docker Registry Name"
        type: env_var_name
        default: DOCKER_REGISTRY
      image:
        description: "Image Name"
        type: env_var_name
        default: COMPONENT_IMAGENAME
      tag:
        description: "Image Tag"
        type: env_var_name
        default: IMAGE_TAG
      imagesha:
        description: "sha of the container"
        type: string 
        default: $(</tmp/digest.txt)
      customaction:
        description: "Custom Action"
        type: string
        default: "GLOBAL.HelmChart"                  
    executor: default         
    steps:
      - microservice_version_update:
          dhuser: << parameters.dhuser >>
          dhpass: << parameters.dhpass >>
          dhurl: << parameters.dhurl >>
          application: << parameters.application >>
          appversion: << parameters.appversion >>
          compname: << parameters.compname >>
          compversion: << parameters.compversion >>
          comptype: << parameters.comptype >>
          helmchart: << parameters.helmchart >>
          image: << parameters.image >>
          imagesha: << parameters.imagesha >>
          registry: << parameters.registry >>
          tag: << parameters.tag >>          
          customaction: << parameters.customaction >>
  envscript_job:
    description: "Generate the environment variable script from the TOML file"
    parameters:
      envvars:
        description: "Name of the input environment TOML file"
        type: string
      envvars_sh:
        description: "Name of output shell script name"
        type: string  
    executor: default
    steps:
      - envscript:
          envvars: << parameters.envvars >>
          envvars_sh: << parameters.envvars_sh >>  
